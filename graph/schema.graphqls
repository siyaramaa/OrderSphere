# GraphQL schema example
#
# https://gqlgen.com/getting-started/

type BusinessAccount {
  id: ID! 
  accountName: String!
  accountEmail: String!
  accountPassword: String!
  accountContact: String!
  accountAddress: String!
  createdAt: String!
}

type BusinessCustomer {
  id: ID!
  businessAccountId: ID!
  customerAccountId: ID!
  joinedDate: String!
}


type CustomerAccount {
  id: ID! 
  accountName: String!
  accountEmail: String!
  accountPassword: String!
  accountContact: String!
  accountAddress: String!
  createdAt: String!
}

type Order {
  id: ID!
  productName: String!
  productUrl: String!
  productPrice: Float!
  productPriceCurrency: String!
  productDescription: String!
  orderedByCustomerEmail: ID!
  business_id: ID!
  orderDeadline: String!
  orderPlacedDate: String!
  orderStatus: String!
}

union LoginAccountDetails = CustomerAccount | BusinessAccount 

type LoginResponse{
    accessToken: String!
    accountDetails: LoginAccountDetails! 
}

type Query {
  getBusinessAccounts: [BusinessAccount!]!
  getCustomerAccounts: [CustomerAccount!]!  # Changed to CustomerAccount
  getCustomersByBusinessId(business_id: ID!): [BusinessCustomer!]!  # Corrected parameter name
  getCustomerByIdOrEmail(input: AccountQueryInput!): CustomerAccount!
  getBusinessByIdOrEmail(input: AccountQueryInput!): BusinessAccount!
  getOrders(input: OrderQueryInput): [Order!]!
}

type Mutation {
  # Business - business can write and read data 
  createBusinessAccount(input: NewBusinessAccountInput!): BusinessAccount!
  loginAsBusiness(input: LoginDetailsInput!): LoginResponse!
  createOrder(input: NewOrderInput!): Order! 
  deleteBusinessAccount(input: LoginDetailsInput!): String!
  linkAccountToBusiness(input: LinkAccountToBusinessInput): String!
  updateOrder(input: UpdateOrderInput!): Order!
  deleteOrder(order_id: ID!): String!

  # Customer - customer can only read data
  createCustomerAccount(input: NewCustomerAccountInput!): CustomerAccount!
  loginAsCustomer(input: LoginDetailsInput!): LoginResponse!
  deleteCustomerAccount(input: LoginDetailsInput!): String!
}

input LinkAccountToBusinessInput{
     business_id: String!
     customer_id: String!
}

input LoginDetailsInput{
    accountEmail: String!
    accountPassword: String!
}

input NewBusinessAccountInput{
  accountName: String!
  accountEmail: String!
  accountPassword: String!
  accountContact: String!
  accountAddress: String!
}

input NewCustomerAccountInput{
  accountName: String!
  accountEmail: String!
  accountPassword: String!
  accountContact: String!
  accountAddress: String!
  businessAccountId: String
}

input OrderQueryInput{
  business_id: String 
  customer_email: String 
}

input AccountQueryInput{
  account_id: ID
  account_email: String 
}

enum OrderStatusTypes {
    PENDING
    READY_TO_BE_SHIPPED
    SHIPPED
    DELIVERED
}

input NewOrderInput{
  productName: String!
  productUrl: String
  productPrice: Float!
  productPriceCurrency: String!
  productDescription: String!
  orderedByCustomerEmail: ID!
  business_id: ID!
  orderDeadline: String!
  orderPlacedDate: String
  orderStatus: OrderStatusTypes
}

input UpdateOrderInput{
  id: ID!
  productName: String
  productUrl: String
  productPrice: Float
  productPriceCurrency: String
  productDescription: String
  orderedByCustomerEmail: ID
  orderDeadline: String
  orderPlacedDate: String
  orderStatus: OrderStatusTypes
}
